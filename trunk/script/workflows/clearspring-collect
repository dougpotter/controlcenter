#!/usr/bin/env ruby

require 'optparse'

options = {}
parser = OptionParser.new do |opts|
  opts.banner = "Usage: script/workflows/clearspring-collect [options]"
  
  opts.on('-s', '--source SOURCE', 'Extract from specified SOURCE only (search-hashed-int/search-hashed-us/share-int/share-us/view-int/view-us, default is to extract all sources)') do |source|
    options[:source] = source
  end
end.parse!

all_sources = %w(view-us view-int search-hashed-us search-hashed-int share-us share-int)
if source = options[:source]
  if all_sources.include?(source)
    selected_sources = [source]
  else
    raise OptionParser::ParseError, "Invalid source value: #{source}"
  end
else
  selected_sources = all_sources
end

require File.expand_path('../../../config/boot',  __FILE__)
require File.expand_path('../../../config/environment',  __FILE__)

# Important: development version of ruote is required (as of Jun 10, 2010)
# since it contains bugfixes and features we rely on.

require 'yaml'
require 'ostruct'

def debug
  require 'ruby-debug'
  debugger
end

$config = WorkflowParameters.load('workflows/clearspring')

def config
  $config
end

RuoteBootstrap.init_host
jobs = []
selected_sources.each do |data_source|
  jobs << RuoteGlobals.host.launch(:clearspring_hourly_discovery,
    :date => '20100523',
    :data_source => data_source,
    :data_source_path => config.clearspring_root_url,
    :download_root_dir => config.download_root_dir,
    :gzip_root_dir => config.temp_root_dir,
    :http_username => config.clearspring_http_username,
    :http_password => config.clearspring_http_password,
    :s3_bucket => config.s3_bucket,
    :clearspring_pid => config.clearspring_pid,
    :wait => true
  )
end
jobs.each do |job|
  job.wait
end
RuoteGlobals.host.print_last_error
