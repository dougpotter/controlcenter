require 'spec_helper'

describe FactsController do

  # This test case was generated by rspec.
  it "should use FactsController" do
    controller.should be_an_instance_of(FactsController)
  end

  describe "GET 'index'" do
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for hourly frequency.
    it "should be successful with hour frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaigns',
        :frequency => 'hour',
        :tz_offset => 0
      response.should be_success
    end
    
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for daily frequency.
    it "should be successful with day frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaigns',
        :frequency => 'day',
        :tz_offset => 0
      response.should be_success
    end
    
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for weekly frequency.
    it "should be successful with week frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaigns',
        :frequency => 'week',
        :tz_offset => 0
      response.should be_success
    end
    
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for monthly frequency.
    it "should be successful with month frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaigns',
        :frequency => 'month',
        :tz_offset => 0
      response.should be_success
    end
  end
end
