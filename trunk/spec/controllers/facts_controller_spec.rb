require 'spec_helper'

describe FactsController do

  # This test case was generated by rspec.
  it "should use FactsController" do
    controller.should be_an_instance_of(FactsController)
  end

  describe "POST 'create'" do
    fixtures :creatives, :campaigns, :line_items, :ad_inventory_sources, :audiences, :campaigns_creatives, :ad_inventory_sources_campaigns
    it "should successfully create given known values and relationships" do
      post 'create',
        :click_count => "1000",
        :start_time => Time.now.to_s, 
        :end_time => Time.now.to_s,
        :duration_in_minutes => 100,
        :creative_code => "AA11",
        :campaign_code => "ABC1",
        :line_item_code => "ABCD",
        :ais_code => "AdX",
        :audience_code => "AB17"
      response.should be_success
    end
    it "should fail validation given known values but an unknown relationship" do
      pending
      post 'create',
        :click_count => "1000",
        :start_time => Time.now.to_s, 
        :end_time => Time.now.to_s,
        :duration_in_minutes => 100,
        :creative_code => "AA11",
        :campaign_code => "ABC1",
        :line_item_code => "ABCD",
        :ais_code => "AdX",
        :audience_code => "AB1V"
      response.should be_client_error
    end
    it "should fail validation given an unknown value" do
      post 'create',
        :click_count => "1000",
        :start_time => Time.now.to_s, 
        :end_time => Time.now.to_s,
        :duration_in_minutes => 100,
        :creative_code => "AA11",
        :campaign_code => "XXXX",
        :line_item_code => "ABCD",
        :ais_code => "AdX",
        :audience_code => "AB17"
      response.should be_client_error
    end
  end

  describe "GET 'index'" do
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for hourly frequency.
    it "should be successful with hour frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaign_code',
        :frequency => 'hour',
        :tz_offset => 0
      response.should be_success
    end
    
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for daily frequency.
    it "should be successful with day frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaign_code',
        :frequency => 'day',
        :tz_offset => 0
      response.should be_success
    end
    
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for weekly frequency.
    it "should be successful with week frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaign_code',
        :frequency => 'week',
        :tz_offset => 0
      response.should be_success
    end
    
    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # Since different SQL generation paths are utilized for each
    # frequency, test all frequencies separately.
    # This test is for monthly frequency.
    it "should be successful with month frequency" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaign_code',
        :frequency => 'month',
        :tz_offset => 0
      response.should be_success
    end

    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # This is a test of summary funcitonality with one summery
    # dimension.
    it "should be successful with one summary dimension" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaign_code,creative_code,ais_code',
        :frequency => 'day',
        :summarize => 'creative_code',
        :tz_offset => 0
      response.should be_success
    end

    # Basic functionality check - requesting a report with some
    # sensible parameters should not produce errors.
    # This is a test of summary funcitonality with two summery
    # dimensions.
    it "should be successful with two summary dimensions" do
      # index fails when invoked without parameters
      get 'index',
        :filters => "start_time,2010-01-01 00:00:00,end_time,2010-01-02 00:00:00",
        :metrics => 'impression_count',
        :dimensions => 'campaign_code,creative_code,ais_code',
        :frequency => 'day',
        :summarize => 'creative_code,campaign_code',
        :tz_offset => 0
      response.should be_success
    end
  end
end
